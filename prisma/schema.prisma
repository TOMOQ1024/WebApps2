// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model CompDynamPost {
  id           Int      @id @default(autoincrement())
  authorId     Int
  iteration    Int      @default(100)
  z0Expression String   @default("0")
  expression   String   @default("z")
  radius       Float    @default(2)
  originX      Float    @default(0)
  originY      Float    @default(0)
  createdAt    DateTime @default(now())

  // リレーションを定義
  author User               @relation(fields: [authorId], references: [id])
  tags   CompDynamPostTag[]

  // インデックスを追加（オプション）
  @@index([authorId])
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  // リレーションを定義
  posts CompDynamPostTag[]
}

model CompDynamPostTag {
  postId  Int
  tagId   Int
  cd_post CompDynamPost @relation(fields: [postId], references: [id], onDelete: Cascade)
  tag     Tag           @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([postId, tagId])
  @@index([postId])
  @@index([tagId])
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  passhash String

  // リレーションを定義
  posts CompDynamPost[]
}
